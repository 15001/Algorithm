//Gauss Elimination

#include<iostream>
using namespace std;

void main()
{
	int M;
	int N;
	cin >> M >> N;
	float a[500][1000] = { 0 };
	for (int i = 0; i < M; i++)
		for (int j = 0; j < N + 1; j++)
			cin >> a[i][j];
	bool manySolutionFlag = false;

	//处理上三角阵
	for (int j = 0; j < N; j++)
	{
		bool Flag = false;
		for (int i = j; i < M; i++)
			if (a[i][j] != 0)
			{
				for (int k = 0; k < N+1; k++)
				{
					float t = a[i][k];
					a[i][k] = a[j][k];
					a[j][k] = t;
				}
				Flag = true;
				break;
			}
		if (!Flag)
		{
			manySolutionFlag = true;
			continue;
		}
		for (int i = j + 1; i < M; i++)
		{
			float value = a[i][j];                   //此处需要特别小心
			for (int k = j; k < N + 1; k++)
				a[i][k] = a[i][k] - a[j][k] * value / a[j][j];
		}
	}

	//检查是否无解
	for (int i = 0; i < N; i++)
	{
		int count = 0;
		if (a[i][N] != 0)
		{
			for (int j = i; j < N ; j++)
				if (a[i][j] == 0)
					count++;
		}
		if (count == N - i + 1)
		{
			cout << "No Solution!" << endl;
			return;
		}
	}

	//多个解情形
	if (manySolutionFlag == true)
	{
		cout << "Many Solutions!" << endl;
		return;
	}

	//唯一解情形
	for (int i = N - 2; i >= 0; i--)
		for (int j = i + 1; j < N ; j++)                 //此处也应该多多注意
		{
			a[i][N] = a[i][N] - a[j][N] * a[i][j] / a[j][j];
			a[i][j] = 0;
		}
	cout << "The Solution is :" << endl;
	for (int i = 0; i < N; i++)
		cout << a[i][N] / a[i][i] << endl;
	return;
}
